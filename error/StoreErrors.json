[
	{"AbstractOnlyError":		{"text":"method is abstract only and requires implementation"} },
	{"AccessError":				{"text":"requested access is not allowed"} },
	{"DataError": 				{"text":"data provided to an operation does not meet requirements"} },
	{"DataCloneError": 			{"text":"the object can not be cloned."} },
	{"DependencyError":			{"text":"Module requires another module or the modules are loaded in the wrong order"} },
	{"ItemExistError":			{"text":"object with specified ID already exist"} },
	{"InvalidAccessError":		{"text":"operation or parameter is not allowed"} },
	{"InvalidPropertyError":	{"text":"invalid property or type specified"} },
	{"InvalidObjectError":		{"text":"item is not an a valid store object"} },
	{"InvalidPathError":		{"text":"invalid path"} },
	{"InvalidResponseError":	{"text":"function returned an invalid or unexpected response"} },
	{"InvalidVersionError":		{"text":"invalid dojo or dijit version"} },
	{"InvalidWidgetError":		{"text":"invalid widget"} },
	{"MethodMissingError":		{"text":"a required function is missing"} },
	{"NotFoundError": 			{"text":"the object can not be found here."} },
	{"NotSupportedError": 		{"text":"the operation is not supported"} },
	{"ParameterError":			{"text":"invalid parameter specified"} },
	{"ParameterMissingError":	{"text":"required parameter is missing"} },
	{"PropertyMissingError":	{"text":"required property is missing"} },
	{"ReadOnlyError": 			{"text":"property is READ-ONLY"} },
	{"RequestCancelError": 		{"text":"request was canceled"} },
	{"RequestError": 			{"text":"XHR request failed"} },
	{"RequestPendingError": 	{"text":"another request is still pending"} },
	{"TimeoutError":			{"text":"the operation timed out."} },
	{"TypeError":				{"text":"parameter or property type is invalid"} },
	{"UnknownVersionError":		{"text":"unknown dojo and/or dijit version"} },

	{"ConstraintError": 		{ "text": "a mutation operation failed because a constraint was not satisfied" } },
	{"InvalidStateError": 		{ "text": "the object is in an invalid state"} },
	{"ReadOnlyError": 			{ "text": "the mutating operation was attempted in a 'readonly' transaction"} },
	{"TransactionInactiveError": {"text":"A request was placed against a transaction which is currently not active, or which is finished"} },
	{"UnknownError": 			{ "text": "the operation failed for reasons unrelated to the store or index"} }
]

